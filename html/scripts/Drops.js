// Generated by CoffeeScript 1.6.3
(function() {
  this.Drops = (function() {
    var desk, i, lin, outerContainer, particle, svg, z;

    svg = null;

    desk = null;

    outerContainer = null;

    z = d3.scale.category20c();

    i = 0;

    lin = function(x) {
      return Math.sqrt(x) + Math.random() * x * 0.1;
    };

    particle = function(logRecord) {
      var h, w;
      w = outerContainer.width();
      h = outerContainer.height();
      return svg.append("svg:circle").attr("cx", w * Math.random()).attr("cy", h * Math.random()).attr("r", 1).style("fill", "transparent").style("stroke", "white").style("stroke-width", 1).transition().duration(1000).ease(Math.sqrt).attr("r", 10 + 50 * Math.random()).style("stroke-opacity", 1e-6).remove();
    };

    Drops.prototype.clear = function() {
      return desk.html("");
    };

    Drops.prototype.write = function(text) {
      return desk.html(desk.html() + text);
    };

    Drops.prototype.show = function(log, startTime, period) {
      var rec, records, _i, _len, _results;
      if (startTime == null) {
        startTime = 10;
      }
      if (period == null) {
        period = 0.5;
      }
      if (!log) {
        return;
      }
      records = log.getPastRecords(startTime, period);
      _results = [];
      for (_i = 0, _len = records.length; _i < _len; _i++) {
        rec = records[_i];
        _results.push(particle(rec));
      }
      return _results;
    };

    function Drops(containerSelector) {
      outerContainer = $(containerSelector);
      svg = d3.select("#dropSvg");
    }

    return Drops;

  })();

}).call(this);

/*
//@ sourceMappingURL=Drops.map
*/
