// Generated by CoffeeScript 1.6.3
(function() {
  this.LogSummary = (function() {
    var area, out;

    function LogSummary() {}

    area = null;

    out = null;

    LogSummary.prototype.clear = function() {
      return area != null ? area.html("") : void 0;
    };

    LogSummary.prototype.write = function(text) {
      return area.html(area.html() + text);
    };

    LogSummary.prototype.show = function(log) {
      var error;
      this.clear();
      try {
        return this.write("<pre>\nCurrent Time:\n" + (log.getCurrentTime()) + " " + (log.getCurrentSec()) + "\nServer Difference: " + (log.getServerTimeDiff().toFixed(2)) + "\n-----------------------\n" + (log.getFirstTime()) + " " + (log.getFirstTimeSec()) + " first record time\n" + (log.getLastTime()) + " " + (log.getLastTimeSec()) + " last record time\n" + (log.getTimeLength().toFixed(2)) + " seconds\n-----------------------\n" + (log.count()) + " Requests\n" + (log.getRecordsPerSecond().toFixed(2)) + " Requests Per Second\n-----------------------\n" + (log.getCurrentTime()) + " ************************\n" + (log.getPastRecords(10, 0.5).join('\n')) + "\n" + (log.getCurrentTime()) + " ************************\n--------------------------\nlog.getShortLog()\n</pre>");
      } catch (_error) {
        error = _error;
        return this.write("<pre style='font-size:20px; color:red'>\n-----------------------\n" + (error.toString()) + "\n-----------------------\n</pre>");
      }
    };

    LogSummary.prototype.buildSummaryArea = function(containerSelector) {
      out = $(containerSelector);
      out.html("");
      area = $("<div style='position:relative; left:0px; top:0px;  width:550px; height:600px; border:1px solid silver; color:black; overflow-y:hidden;'>mmm<div>");
      return out.append(area);
    };

    return LogSummary;

  })();

}).call(this);

/*
//@ sourceMappingURL=LogSummary.map
*/
